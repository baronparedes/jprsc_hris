@model JPRSC.HRIS.Features.Reports.GenerateAlphalist.QueryResult
@using System.Collections
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Alphalist Report for @String.Format("{0}", String.IsNullOrWhiteSpace(Model.ClientName) ? "All Clients" : Model.ClientName)</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=PT+Serif" rel="stylesheet">
    <style>
        body {
            font-family: 'PT Serif', serif;
        }

        .report-table td {
            text-align: right;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <h3>Job Placement Resources Services Cooperative</h3>
                <h4>Alphalist Report for @String.Format("{0}", String.IsNullOrWhiteSpace(Model.ClientName) ? "All Clients" : Model.ClientName)</h4>
                <h5>For payroll period year @Model.PayrollPeriodFromYear to @Model.PayrollPeriodToYear</h5>
                <h5>@Model.AlphalistRecords.Count record/s total</h5>
            </div>
        </div>
        @if (Model.AlphalistRecords.Count == 0)
        {
            <div class="row">
                <div class="col-sm-12">
                    <p class="lead">No records found.</p>
                </div>
            </div>
        }
        else
        {
            <div class="row hidden-print">
                <div class="col-sm-12">
                    <div class="form-group">
                        <a href="@Url.Action("GenerateAlphalist", new { AlphalistType = Model.AlphalistType, ClientId = Model.ClientId, PayrollPeriodFromYear = Model.PayrollPeriodFromYear, PayrollPeriodToYear = Model.PayrollPeriodToYear, FromPayrollPeriodMonth = Model.FromPayrollPeriodMonth, FromPayrollPeriod = Model.FromPayrollPeriod, ToPayrollPeriodMonth = Model.ToPayrollPeriodMonth, ToPayrollPeriod = Model.ToPayrollPeriod, ThirteenthMonthPayrollPeriodFromYear = Model.ThirteenthMonthPayrollPeriodFromYear, ThirteenthMonthPayrollPeriodToYear = Model.ThirteenthMonthPayrollPeriodToYear, ThirteenthMonthFromPayrollPeriodMonth = Model.ThirteenthMonthFromPayrollPeriodMonth, ThirteenthMonthFromPayrollPeriod = Model.ThirteenthMonthFromPayrollPeriod, ThirteenthMonthToPayrollPeriodMonth = Model.ThirteenthMonthToPayrollPeriodMonth, ThirteenthMonthToPayrollPeriod = Model.ThirteenthMonthToPayrollPeriod, Destination = "Excel" })" class="btn btn-primary margin-right-20">Download Excel</a>
                        <a href="@Url.Action("GenerateAlphalist", new { AlphalistType = Model.AlphalistType, ClientId = Model.ClientId, PayrollPeriodFromYear = Model.PayrollPeriodFromYear, PayrollPeriodToYear = Model.PayrollPeriodToYear, FromPayrollPeriodMonth = Model.FromPayrollPeriodMonth, FromPayrollPeriod = Model.FromPayrollPeriod, ToPayrollPeriodMonth = Model.ToPayrollPeriodMonth, ToPayrollPeriod = Model.ToPayrollPeriod, ThirteenthMonthPayrollPeriodFromYear = Model.ThirteenthMonthPayrollPeriodFromYear, ThirteenthMonthPayrollPeriodToYear = Model.ThirteenthMonthPayrollPeriodToYear, ThirteenthMonthFromPayrollPeriodMonth = Model.ThirteenthMonthFromPayrollPeriodMonth, ThirteenthMonthFromPayrollPeriod = Model.ThirteenthMonthFromPayrollPeriod, ThirteenthMonthToPayrollPeriodMonth = Model.ThirteenthMonthToPayrollPeriodMonth, ThirteenthMonthToPayrollPeriod = Model.ThirteenthMonthToPayrollPeriod, Destination = "CSV" })" class="btn btn-primary margin-right-20">Download CSV</a>
                        <a href="@Url.Action("Generate2316", new { AlphalistType = Model.AlphalistType, ClientId = Model.ClientId, PayrollPeriodFromYear = Model.PayrollPeriodFromYear, PayrollPeriodToYear = Model.PayrollPeriodToYear, FromPayrollPeriodMonth = Model.FromPayrollPeriodMonth, FromPayrollPeriod = Model.FromPayrollPeriod, ToPayrollPeriodMonth = Model.ToPayrollPeriodMonth, ToPayrollPeriod = Model.ToPayrollPeriod, ThirteenthMonthPayrollPeriodFromYear = Model.ThirteenthMonthPayrollPeriodFromYear, ThirteenthMonthPayrollPeriodToYear = Model.ThirteenthMonthPayrollPeriodToYear, ThirteenthMonthFromPayrollPeriodMonth = Model.ThirteenthMonthFromPayrollPeriodMonth, ThirteenthMonthFromPayrollPeriod = Model.ThirteenthMonthFromPayrollPeriod, ThirteenthMonthToPayrollPeriodMonth = Model.ThirteenthMonthToPayrollPeriodMonth, ThirteenthMonthToPayrollPeriod = Model.ThirteenthMonthToPayrollPeriod })" class="btn btn-primary margin-right-20">Generate 2316</a>
                        @if (String.IsNullOrWhiteSpace(Model.DisplayMode))
                        {
                            <button class="btn btn-primary" disabled="disabled">Sort by Name</button>
                            <a href="@Url.Action("GenerateAlphalist", new { AlphalistType = Model.AlphalistType, ClientId = Model.ClientId, PayrollPeriodFromYear = Model.PayrollPeriodFromYear, PayrollPeriodToYear = Model.PayrollPeriodToYear, FromPayrollPeriodMonth = Model.FromPayrollPeriodMonth, FromPayrollPeriod = Model.FromPayrollPeriod, ToPayrollPeriodMonth = Model.ToPayrollPeriodMonth, ToPayrollPeriod = Model.ToPayrollPeriod, ThirteenthMonthPayrollPeriodFromYear = Model.ThirteenthMonthPayrollPeriodFromYear, ThirteenthMonthPayrollPeriodToYear = Model.ThirteenthMonthPayrollPeriodToYear, ThirteenthMonthFromPayrollPeriodMonth = Model.ThirteenthMonthFromPayrollPeriodMonth, ThirteenthMonthFromPayrollPeriod = Model.ThirteenthMonthFromPayrollPeriod, ThirteenthMonthToPayrollPeriodMonth = Model.ThirteenthMonthToPayrollPeriodMonth, ThirteenthMonthToPayrollPeriod = Model.ThirteenthMonthToPayrollPeriod, DisplayMode = "Branch" })" class="btn btn-primary">Group by Branch</a>
                        }
                        else if (Model.DisplayMode == "Branch")
                        {
                            <a href="@Url.Action("GenerateAlphalist", new { AlphalistType = Model.AlphalistType, ClientId = Model.ClientId, PayrollPeriodFromYear = Model.PayrollPeriodFromYear, PayrollPeriodToYear = Model.PayrollPeriodToYear, FromPayrollPeriodMonth = Model.FromPayrollPeriodMonth, FromPayrollPeriod = Model.FromPayrollPeriod, ToPayrollPeriodMonth = Model.ToPayrollPeriodMonth, ToPayrollPeriod = Model.ToPayrollPeriod, ThirteenthMonthPayrollPeriodFromYear = Model.ThirteenthMonthPayrollPeriodFromYear, ThirteenthMonthPayrollPeriodToYear = Model.ThirteenthMonthPayrollPeriodToYear, ThirteenthMonthFromPayrollPeriodMonth = Model.ThirteenthMonthFromPayrollPeriodMonth, ThirteenthMonthFromPayrollPeriod = Model.ThirteenthMonthFromPayrollPeriod, ThirteenthMonthToPayrollPeriodMonth = Model.ThirteenthMonthToPayrollPeriodMonth, ThirteenthMonthToPayrollPeriod = Model.ThirteenthMonthToPayrollPeriod, })" class="btn btn-primary">Sort by Name</a>
                            <button class="btn btn-primary" disabled="disabled">Group by Branch</button>
                        }
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    @Html.Partial("_Tables", Model.Tables)
                </div>
            </div>
        }
    </div>
</body>
</html>