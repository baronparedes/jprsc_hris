@model JPRSC.HRIS.WebApp.Features.Payroll.PayrollReport.QueryResult
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Payroll Report for @Model.PayrollProcessBatchResult.Client.Name</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=PT+Serif" rel="stylesheet">
    <style>
        body {
            font-family: 'PT Serif', serif;
        }

        .payroll-table td {
            text-align: right;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <h3>Job Placement Resources Services Cooperative</h3>
                <h4>Payroll Report for @Model.PayrollProcessBatchResult.Client.Name</h4>
                <h5>For the period @Model.PayrollProcessBatchResult.PayrollPeriodFromFormatted to @Model.PayrollProcessBatchResult.PayrollPeriodToFormatted (@Model.PayrollProcessBatchResult.PayrollPeriodFormatted payroll period)</h5>
                <h5>@Model.PayrollReportItems.Count() record/s total</h5>
            </div>
        </div>
        @if (!Model.PayrollReportItems.Any())
        {
            <div class="row">
                <div class="col-sm-12">
                    <p class="lead">No records found.</p>
                </div>
            </div>
        }
        else
        {
            <div class="row hidden-print">
                <div class="col-sm-12">
                    <div class="form-group">
                        <form action="~/Payroll/ExportToExcelPost" method="post" style="display: inline-block;">
                            <input type="hidden" name="PayrollProcessBatchId" value="@Model.PayrollProcessBatchId" />
                            <input type="hidden" name="ReportType" value="Payroll" />
                            <input type="hidden" name="ViewDetailed" id="ViewDetailed" value="false" />
                            <button type="submit" class="btn btn-primary" style="margin-right: 20px;">Download Excel</button>
                        </form>
                        @if (String.IsNullOrWhiteSpace(Model.DisplayMode))
                        {
                            <button class="btn btn-primary" disabled="disabled">Sort by Name</button>
                            <a href="@Url.Action("PayrollReport", new { PayrollProcessBatchId = Model.PayrollProcessBatchId, DisplayMode = "Branch" })" class="btn btn-primary">Group by Branch</a>
                        }
                        else if (Model.DisplayMode == "Branch")
                        {
                            <a href="@Url.Action("PayrollReport", new { PayrollProcessBatchId = Model.PayrollProcessBatchId })" class="btn btn-primary">Sort by Name</a>
                            <button class="btn btn-primary" disabled="disabled">Group by Branch</button>
                        }
                    </div>
                    <div class="form-group">
                        <input type="checkbox" id="viewDetailedCheckbox" /> View in detail
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    @if (String.IsNullOrWhiteSpace(Model.DisplayMode))
                    {
                        <table class="table table-striped table-bordered payroll-table">
                            <thead>
                                <tr>
                                    <th>&nbsp;</th>
                                    <th>&nbsp;</th>
                                    <th>Regular Pay</th>
                                    <th>Overtime</th>
                                    <th>UT/Tardy</th>
                                    <th>COLA</th>
                                    <th>Earnings</th>
                                    <th>Total Earnings</th>
                                    @if (Model.PayrollProcessBatchResult.DeductedSSS == true)
                                    {
                                        <th>SSS Prem</th>
                                    }
                                    @if (Model.PayrollProcessBatchResult.DeductedPagIbig == true)
                                    {
                                        <th>Pag-Ibig</th>
                                    }
                                    <th>Deductions</th>
                                    <th>Loan Payments</th>
                                    @if (Model.PayrollProcessBatchResult.DeductedPHIC == true)
                                    {
                                        <th>PHIC</th>
                                    }
                                    <th>Total Deductions</th>
                                    <th>Net Pay</th>
                                    @foreach (var earningDeduction in Model.EarningDeductions)
                                    {
                                        <th class="detail hidden">@earningDeduction.Code</th>
                                    }
                                    @foreach (var loanType in Model.LoanTypes)
                                    {
                                        <th class="detail hidden">@loanType.Code</th>
                                    }
                                    @foreach (var payRate in Model.PayRates)
                                    {
                                        <th class="detail hidden">@payRate.Code</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var payrollReportItem in Model.PayrollReportItems)
                                {
                                    <tr>
                                        <td>@payrollReportItem.PayrollRecord.Employee.EmployeeCode</td>
                                        <td style="text-align: left;">@String.Format("{0}, {1}", payrollReportItem.PayrollRecord.Employee.LastName, payrollReportItem.PayrollRecord.Employee.FirstName)</td>
                                        <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.DaysWorkedValue.GetValueOrDefault() + payrollReportItem.PayrollRecord.HoursWorkedValue.GetValueOrDefault())</td>
                                        <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.OvertimeValue.GetValueOrDefault())</td>
                                        <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.HoursUndertimeValue.GetValueOrDefault() + payrollReportItem.PayrollRecord.HoursLateValue.GetValueOrDefault())</td>
                                        <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.COLADailyValue.GetValueOrDefault() + payrollReportItem.PayrollRecord.COLAHourlyValue.GetValueOrDefault())</td>
                                        <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.EarningsValue.GetValueOrDefault())</td>
                                        <td><strong>@String.Format("{0:n}", payrollReportItem.PayrollRecord.TotalEarningsValue)</strong></td>
                                        @if (Model.PayrollProcessBatchResult.DeductedSSS == true)
                                        {
                                        <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.SSSValueEmployee.GetValueOrDefault())</td>
                                        }
                                        @if (Model.PayrollProcessBatchResult.DeductedPagIbig == true)
                                        {
                                            <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.PagIbigValue.GetValueOrDefault())</td>
                                        }                                        
                                        <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.DeductionsValue.GetValueOrDefault())</td>
                                        <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.LoanPaymentValue.GetValueOrDefault())</td>
                                        @if (Model.PayrollProcessBatchResult.DeductedPHIC == true)
                                        {
                                            <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.PHICValueEmployee.GetValueOrDefault())</td>
                                        }                                        
                                        <td><strong>@String.Format("{0:n}", payrollReportItem.PayrollRecord.TotalDeductionsValue)</strong></td>
                                        <td><strong>@String.Format("{0:n}", payrollReportItem.PayrollRecord.NetPayValue)</strong></td>
                                        @foreach (var earningDeduction in Model.EarningDeductions)
                                        {
                                            <td class="detail hidden">@String.Format("{0:n}", payrollReportItem.EarningDeductionRecords.SingleOrDefault(edr => edr.EarningDeductionId == earningDeduction.Id)?.Amount.GetValueOrDefault().ToString() ?? "0.00")</td>
                                        }
                                        @foreach (var loanType in Model.LoanTypes)
                                        {
                                            <td class="detail hidden">@String.Format("{0:n}", payrollReportItem.Loans.SingleOrDefault(l => l.LoanTypeId == loanType.Id)?.DeductionAmount.GetValueOrDefault().ToString() ?? "0.00")</td>
                                        }
                                        @foreach (var payRate in Model.PayRates)
                                        {
                                            <td class="detail hidden">@String.Format("{0:n}", payrollReportItem.Overtimes.SingleOrDefault(ot => ot.PayPercentageId == payRate.Id)?.NumberOfHoursValue.GetValueOrDefault().ToString() ?? "0.00")</td>
                                        }
                                    </tr>
                                }
                                <tr>
                                    <td>&nbsp;</td>
                                    <td>Total:</td>
                                    <td>@String.Format("{0:n}", Model.PayrollReportItems.Select(p => p.PayrollRecord).Sum(p => p.DaysWorkedValue.GetValueOrDefault() + p.HoursWorkedValue.GetValueOrDefault()))</td>
                                    <td>@String.Format("{0:n}", Model.PayrollReportItems.Select(p => p.PayrollRecord).Sum(p => p.OvertimeValue.GetValueOrDefault()))</td>
                                    <td>@String.Format("{0:n}", Model.PayrollReportItems.Select(p => p.PayrollRecord).Sum(p => p.HoursUndertimeValue.GetValueOrDefault() + p.HoursLateValue.GetValueOrDefault()))</td>
                                    <td>@String.Format("{0:n}", Model.PayrollReportItems.Select(p => p.PayrollRecord).Sum(p => p.COLADailyValue.GetValueOrDefault() + p.COLAHourlyValue.GetValueOrDefault()))</td>
                                    <td>@String.Format("{0:n}", Model.PayrollReportItems.Select(p => p.PayrollRecord).Sum(p => p.EarningsValue.GetValueOrDefault()))</td>
                                    <td><strong>@String.Format("{0:n}", Model.PayrollReportItems.Select(p => p.PayrollRecord).Sum(p => p.TotalEarningsValue))</strong></td>
                                    @if (Model.PayrollProcessBatchResult.DeductedSSS == true)
                                    {
                                        <td>@String.Format("{0:n}", Model.PayrollReportItems.Select(p => p.PayrollRecord).Sum(p => p.SSSValueEmployee.GetValueOrDefault()))</td>
                                    }                                 
                                    @if (Model.PayrollProcessBatchResult.DeductedPagIbig == true)
                                    {
                                        <td>@String.Format("{0:n}", Model.PayrollReportItems.Select(p => p.PayrollRecord).Sum(p => p.PagIbigValue.GetValueOrDefault()))</td>
                                    }
                                    <td>@String.Format("{0:n}", Model.PayrollReportItems.Select(p => p.PayrollRecord).Sum(p => p.DeductionsValue.GetValueOrDefault()))</td>
                                    <td>@String.Format("{0:n}", Model.PayrollReportItems.Select(p => p.PayrollRecord).Sum(p => p.LoanPaymentValue.GetValueOrDefault()))</td>
                                    @if (Model.PayrollProcessBatchResult.DeductedPHIC == true)
                                    {
                                        <td>@String.Format("{0:n}", Model.PayrollReportItems.Select(p => p.PayrollRecord).Sum(p => p.PHICValueEmployee.GetValueOrDefault()))</td>
                                    }                                    
                                    <td><strong>@String.Format("{0:n}", Model.PayrollReportItems.Select(p => p.PayrollRecord).Sum(p => p.TotalDeductionsValue))</strong></td>
                                    <td><strong>@String.Format("{0:n}", Model.PayrollReportItems.Select(p => p.PayrollRecord).Sum(p => p.NetPayValue))</strong></td>
                                    @foreach (var earningDeduction in Model.EarningDeductions)
                                    {
                                        <td class="detail hidden">@String.Format("{0:n}", Model.PayrollReportItems.SelectMany(p => p.EarningDeductionRecords.Where(edr => edr.EarningDeductionId == earningDeduction.Id)).Sum(edr => edr.Amount.GetValueOrDefault()))</td>
                                    }
                                    @foreach (var loanType in Model.LoanTypes)
                                    {
                                        <td class="detail hidden">@String.Format("{0:n}", Model.PayrollReportItems.SelectMany(p => p.Loans.Where(l => l.LoanTypeId == loanType.Id)).Sum(l => l.DeductionAmount.GetValueOrDefault()))</td>
                                    }
                                    @foreach (var payRate in Model.PayRates)
                                    {
                                        <td class="detail hidden">@String.Format("{0:n}", Model.PayrollReportItems.SelectMany(p => p.Overtimes.Where(ot => ot.PayPercentageId == payRate.Id)).Sum(ot => ot.NumberOfHoursValue.GetValueOrDefault()))</td>
                                    }
                                </tr>
                            </tbody>
                        </table>
                    }
                    else if (Model.DisplayMode == "Branch")
                    {
                        foreach (var payrollReportItem in Model.PayrollReportItems.Where(p => p.PayrollRecord.Employee.Department == null))
                        {
                            payrollReportItem.PayrollRecord.Employee.Department = new JPRSC.HRIS.Models.Department { Id = 0, Name = "No Branch" };
                        }

                        var groupedByBranch = Model.PayrollReportItems.GroupBy(pr => new { pr.PayrollRecord.Employee.Department.Id, pr.PayrollRecord.Employee.Department.Name });
                        foreach (var group in groupedByBranch.OrderBy(g => g.Key.Name))
                        {
                            <h2>@group.Key.Name</h2>
                            <table class="table table-striped table-bordered payroll-table">
                                <thead>
                                    <tr>
                                        <th>&nbsp;</th>
                                        <th>&nbsp;</th>
                                        <th>Regular Pay</th>
                                        <th>Overtime</th>
                                        <th>UT/Tardy</th>
                                        <th>COLA</th>
                                        <th>Earningds</th>
                                        <th>Total Earnings</th>
                                        <th>SSS Prem</th>
                                        <th>Pag-Ibig</th>
                                        <th>Deductions</th>
                                        <th>Loan Payments</th>
                                        <th>PHIC</th>
                                        <th>Total Deductions</th>
                                        <th>Net Pay</th>
                                        @foreach (var earningDeduction in Model.EarningDeductions)
                                        {
                                            <th class="detail hidden">@earningDeduction.Code</th>
                                        }
                                        @foreach (var loanType in Model.LoanTypes)
                                        {
                                            <th class="detail hidden">@loanType.Code</th>
                                        }
                                        @foreach (var payRate in Model.PayRates)
                                        {
                                            <th class="detail hidden">@payRate.Code</th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var payrollReportItem in group)
                                    {
                                        <tr>
                                            <td>@payrollReportItem.PayrollRecord.Employee.EmployeeCode</td>
                                            <td style="text-align: left;">@String.Format("{0}, {1}", payrollReportItem.PayrollRecord.Employee.LastName, payrollReportItem.PayrollRecord.Employee.FirstName)</td>
                                            <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.DaysWorkedValue.GetValueOrDefault() + payrollReportItem.PayrollRecord.HoursWorkedValue.GetValueOrDefault())</td>
                                            <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.OvertimeValue.GetValueOrDefault())</td>
                                            <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.HoursUndertimeValue.GetValueOrDefault() + payrollReportItem.PayrollRecord.HoursLateValue.GetValueOrDefault())</td>
                                            <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.COLADailyValue.GetValueOrDefault() + payrollReportItem.PayrollRecord.COLAHourlyValue.GetValueOrDefault())</td>
                                            <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.EarningsValue.GetValueOrDefault())</td>
                                            <td><strong>@String.Format("{0:n}", payrollReportItem.PayrollRecord.TotalEarningsValue)</strong></td>
                                            <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.SSSValueEmployee.GetValueOrDefault())</td>
                                            <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.PagIbigValue.GetValueOrDefault())</td>
                                            <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.DeductionsValue.GetValueOrDefault())</td>
                                            <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.LoanPaymentValue.GetValueOrDefault())</td>
                                            <td>@String.Format("{0:n}", payrollReportItem.PayrollRecord.PHICValueEmployee.GetValueOrDefault())</td>
                                            <td><strong>@String.Format("{0:n}", payrollReportItem.PayrollRecord.TotalDeductionsValue)</strong></td>
                                            <td><strong>@String.Format("{0:n}", payrollReportItem.PayrollRecord.NetPayValue)</strong></td>
                                            @foreach (var earningDeduction in Model.EarningDeductions)
                                            {
                                                <td class="detail hidden">@String.Format("{0:n}", payrollReportItem.EarningDeductionRecords.SingleOrDefault(edr => edr.EarningDeductionId == earningDeduction.Id)?.Amount.GetValueOrDefault().ToString() ?? "0.00")</td>
                                            }
                                            @foreach (var loanType in Model.LoanTypes)
                                            {
                                                <td class="detail hidden">@String.Format("{0:n}", payrollReportItem.Loans.SingleOrDefault(l => l.LoanTypeId == loanType.Id)?.DeductionAmount.GetValueOrDefault().ToString() ?? "0.00")</td>
                                            }
                                            @foreach (var payRate in Model.PayRates)
                                            {
                                                <td class="detail hidden">@String.Format("{0:n}", payrollReportItem.Overtimes.SingleOrDefault(ot => ot.PayPercentageId == payRate.Id)?.NumberOfHoursValue.GetValueOrDefault().ToString() ?? "0.00")</td>
                                            }
                                        </tr>
                                    }
                                    <tr>
                                        <td>&nbsp;</td>
                                        <td>Total:</td>
                                        <td>@String.Format("{0:n}", group.Select(p => p.PayrollRecord).Sum(p => p.DaysWorkedValue.GetValueOrDefault() + p.HoursWorkedValue.GetValueOrDefault()))</td>
                                        <td>@String.Format("{0:n}", group.Select(p => p.PayrollRecord).Sum(p => p.OvertimeValue.GetValueOrDefault()))</td>
                                        <td>@String.Format("{0:n}", group.Select(p => p.PayrollRecord).Sum(p => p.HoursUndertimeValue.GetValueOrDefault() + p.HoursLateValue.GetValueOrDefault()))</td>
                                        <td>@String.Format("{0:n}", group.Select(p => p.PayrollRecord).Sum(p => p.COLADailyValue.GetValueOrDefault() + p.COLAHourlyValue.GetValueOrDefault()))</td>
                                        <td>@String.Format("{0:n}", group.Select(p => p.PayrollRecord).Sum(p => p.EarningsValue.GetValueOrDefault()))</td>
                                        <td><strong>@String.Format("{0:n}", group.Select(p => p.PayrollRecord).Sum(p => p.TotalEarningsValue))</strong></td>
                                        <td>@String.Format("{0:n}", group.Select(p => p.PayrollRecord).Sum(p => p.SSSValueEmployee.GetValueOrDefault()))</td>
                                        <td>@String.Format("{0:n}", group.Select(p => p.PayrollRecord).Sum(p => p.PagIbigValue.GetValueOrDefault()))</td>
                                        <td>@String.Format("{0:n}", group.Select(p => p.PayrollRecord).Sum(p => p.DeductionsValue.GetValueOrDefault()))</td>
                                        <td>@String.Format("{0:n}", group.Select(p => p.PayrollRecord).Sum(p => p.LoanPaymentValue.GetValueOrDefault()))</td>
                                        <td>@String.Format("{0:n}", group.Select(p => p.PayrollRecord).Sum(p => p.PHICValueEmployee.GetValueOrDefault()))</td>
                                        <td><strong>@String.Format("{0:n}", group.Select(p => p.PayrollRecord).Sum(p => p.TotalDeductionsValue))</strong></td>
                                        <td><strong>@String.Format("{0:n}", group.Select(p => p.PayrollRecord).Sum(p => p.NetPayValue))</strong></td>
                                        @foreach (var earningDeduction in Model.EarningDeductions)
                                        {
                                            <td class="detail hidden">@String.Format("{0:n}", group.SelectMany(p => p.EarningDeductionRecords.Where(edr => edr.EarningDeductionId == earningDeduction.Id)).Sum(edr => edr.Amount.GetValueOrDefault()))</td>
                                        }
                                        @foreach (var loanType in Model.LoanTypes)
                                        {
                                            <td class="detail hidden">@String.Format("{0:n}", group.SelectMany(p => p.Loans.Where(l => l.LoanTypeId == loanType.Id)).Sum(l => l.DeductionAmount.GetValueOrDefault()))</td>
                                        }
                                        @foreach (var payRate in Model.PayRates)
                                        {
                                            <td class="detail hidden">@String.Format("{0:n}", group.SelectMany(p => p.Overtimes.Where(ot => ot.PayPercentageId == payRate.Id)).Sum(ot => ot.NumberOfHoursValue.GetValueOrDefault()))</td>
                                        }
                                    </tr>
                                </tbody>
                            </table>
                        }
                    }
                </div>
            </div>
        }
    </div>

    <script src="~/wwwroot/lib/jquery/dist/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            console.log("ready!");
            $("#viewDetailedCheckbox").change(function () {
                console.log('changed', this.checked);
                if (this.checked) {
                    $('#ViewDetailed').val(true);
                    $('.detail').removeClass('hidden');
                }
                else {
                    $('#ViewDetailed').val(false);
                    $('.detail').addClass('hidden');
                }
            });
        });
    </script>
</body>
</html>