@model JPRSC.HRIS.WebApp.Features.Payroll.PayrollReport.QueryResult
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Payroll Report for @Model.PayrollProcessBatchResult.Client.Name</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=PT+Serif" rel="stylesheet">
    <style>
        body {
            font-family: 'PT Serif', serif;
        }

        .payroll-table td {
            text-align: right;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <h3>Job Placement Resources Services Cooperative</h3>
                <h4>Payroll Report for @Model.PayrollProcessBatchResult.Client.Name</h4>
                <h5>For the period @Model.PayrollProcessBatchResult.PayrollPeriodFromFormatted to @Model.PayrollProcessBatchResult.PayrollPeriodToFormatted (@Model.PayrollProcessBatchResult.PayrollPeriodFormatted payroll period)</h5>
                <h5>@Model.PayrollRecords.Count() record/s total</h5>
            </div>
        </div>
        @if (!Model.PayrollRecords.Any())
        {
            <div class="row">
                <div class="col-sm-12">
                    <p class="lead">No records found.</p>
                </div>
            </div>
        }
        else
        {
            <div class="row hidden-print">
                <div class="col-sm-12">
                    <div class="form-group">
                        @if (String.IsNullOrWhiteSpace(Model.DisplayMode))
                        {
                            <button class="btn btn-primary" disabled="disabled">Sort by Name</button>
                            <a href="@Url.Action("PayrollReport", new { PayrollProcessBatchId = Model.PayrollProcessBatchId, DisplayMode = "Branch" })" class="btn btn-primary">Group by Branch</a>
                        }
                        else if (Model.DisplayMode == "Branch")
                        {
                            <a href="@Url.Action("PayrollReport", new { PayrollProcessBatchId = Model.PayrollProcessBatchId })" class="btn btn-primary">Sort by Name</a>
                            <button class="btn btn-primary" disabled="disabled">Group by Branch</button>
                        }
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    @if (String.IsNullOrWhiteSpace(Model.DisplayMode))
                    {
                        <table class="table table-striped table-bordered payroll-table">
                            <thead>
                                <tr>
                                    <th>&nbsp;</th>
                                    <th>&nbsp;</th>
                                    <th>Regular Pay</th>
                                    <th>Overtime</th>
                                    <th>UT/Tardy</th>
                                    <th>COLA</th>
                                    <th>Earningds</th>
                                    <th>Total Earnings</th>
                                    @if (Model.PayrollProcessBatchResult.DeductedSSS == true)
                                    {
                                        <th>SSS Prem</th>
                                    }
                                    @if (Model.PayrollProcessBatchResult.DeductedPagIbig == true)
                                    {
                                        <th>Pag-Ibig</th>
                                    }
                                    <th>Deductions</th>
                                    <th>Loan Payments</th>
                                    @if (Model.PayrollProcessBatchResult.DeductedPHIC == true)
                                    {
                                        <th>PHIC</th>
                                    }
                                    <th>Total Deductions</th>
                                    <th>Net Pay</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var payrollRecord in Model.PayrollRecords)
                                {
                                    <tr>
                                        <td>@payrollRecord.Employee.EmployeeCode</td>
                                        <td style="text-align: left;">@String.Format("{0}, {1}", payrollRecord.Employee.LastName, payrollRecord.Employee.FirstName)</td>
                                        <td>@String.Format("{0:n}", payrollRecord.DaysWorkedValue.GetValueOrDefault() + payrollRecord.HoursWorkedValue.GetValueOrDefault())</td>
                                        <td>@String.Format("{0:n}", payrollRecord.OvertimeValue.GetValueOrDefault())</td>
                                        <td>@String.Format("{0:n}", payrollRecord.HoursUndertimeValue.GetValueOrDefault() + payrollRecord.HoursLateValue.GetValueOrDefault())</td>
                                        <td>@String.Format("{0:n}", payrollRecord.COLADailyValue.GetValueOrDefault() + payrollRecord.COLAHourlyValue.GetValueOrDefault())</td>
                                        <td>@String.Format("{0:n}", payrollRecord.EarningsValue.GetValueOrDefault())</td>
                                        <td><strong>@String.Format("{0:n}", payrollRecord.TotalEarningsValue)</strong></td>
                                        @if (Model.PayrollProcessBatchResult.DeductedSSS == true)
                                        {
                                        <td>@String.Format("{0:n}", payrollRecord.SSSValueEmployee.GetValueOrDefault())</td>
                                        }
                                        @if (Model.PayrollProcessBatchResult.DeductedPagIbig == true)
                                        {
                                            <td>@String.Format("{0:n}", payrollRecord.PagIbigValue.GetValueOrDefault())</td>
                                        }                                        
                                        <td>@String.Format("{0:n}", payrollRecord.DeductionsValue.GetValueOrDefault())</td>
                                        <td>@String.Format("{0:n}", payrollRecord.LoanPaymentValue.GetValueOrDefault())</td>
                                        @if (Model.PayrollProcessBatchResult.DeductedPHIC == true)
                                        {
                                            <td>@String.Format("{0:n}", payrollRecord.PHICValueEmployee.GetValueOrDefault())</td>
                                        }                                        
                                        <td><strong>@String.Format("{0:n}", payrollRecord.TotalDeductionsValue)</strong></td>
                                        <td><strong>@String.Format("{0:n}", payrollRecord.NetPayValue)</strong></td>
                                    </tr>
                                }
                                <tr>
                                    <td>&nbsp;</td>
                                    <td>Total:</td>
                                    <td>@String.Format("{0:n}", Model.PayrollRecords.Sum(p => p.DaysWorkedValue.GetValueOrDefault() + p.HoursWorkedValue.GetValueOrDefault()))</td>
                                    <td>@String.Format("{0:n}", Model.PayrollRecords.Sum(p => p.OvertimeValue.GetValueOrDefault()))</td>
                                    <td>@String.Format("{0:n}", Model.PayrollRecords.Sum(p => p.HoursUndertimeValue.GetValueOrDefault() + p.HoursLateValue.GetValueOrDefault()))</td>
                                    <td>@String.Format("{0:n}", Model.PayrollRecords.Sum(p => p.COLADailyValue.GetValueOrDefault()))</td>
                                    <td>@String.Format("{0:n}", Model.PayrollRecords.Sum(p => p.EarningsValue.GetValueOrDefault()))</td>
                                    <td><strong>@String.Format("{0:n}", Model.PayrollRecords.Sum(p => p.TotalEarningsValue))</strong></td>
                                    @if (Model.PayrollProcessBatchResult.DeductedSSS == true)
                                    {
                                        <td>@String.Format("{0:n}", Model.PayrollRecords.Sum(p => p.SSSValueEmployee.GetValueOrDefault()))</td>
                                    }                                 
                                    @if (Model.PayrollProcessBatchResult.DeductedPagIbig == true)
                                    {
                                        <td>@String.Format("{0:n}", Model.PayrollRecords.Sum(p => p.PagIbigValue.GetValueOrDefault()))</td>
                                    }
                                    <td>@String.Format("{0:n}", Model.PayrollRecords.Sum(p => p.DeductionsValue.GetValueOrDefault()))</td>
                                    <td>@String.Format("{0:n}", Model.PayrollRecords.Sum(p => p.LoanPaymentValue.GetValueOrDefault()))</td>
                                    @if (Model.PayrollProcessBatchResult.DeductedPHIC == true)
                                    {
                                        <td>@String.Format("{0:n}", Model.PayrollRecords.Sum(p => p.PHICValueEmployee.GetValueOrDefault()))</td>
                                    }                                    
                                    <td><strong>@String.Format("{0:n}", Model.PayrollRecords.Sum(p => p.TotalDeductionsValue))</strong></td>
                                    <td><strong>@String.Format("{0:n}", Model.PayrollRecords.Sum(p => p.NetPayValue))</strong></td>
                                </tr>
                            </tbody>
                        </table>
                    }
                    else if (Model.DisplayMode == "Branch")
                    {
                        foreach (var payrollRecord in Model.PayrollRecords.Where(p => p.Employee.Department == null))
                        {
                            payrollRecord.Employee.Department = new JPRSC.HRIS.WebApp.Features.Payroll.PayrollReport.QueryResult.Department { Id = 0, Name = "No Branch" };
                        }

                        var groupedByBranch = Model.PayrollRecords.GroupBy(pr => new { pr.Employee.Department.Id, pr.Employee.Department.Name });
                        foreach (var group in groupedByBranch.OrderBy(g => g.Key.Name))
                        {
                            <h2>@group.Key.Name</h2>
                            <table class="table table-striped table-bordered payroll-table">
                                <thead>
                                    <tr>
                                        <th>&nbsp;</th>
                                        <th>&nbsp;</th>
                                        <th>Regular Pay</th>
                                        <th>Overtime</th>
                                        <th>UT/Tardy</th>
                                        <th>COLA</th>
                                        <th>Earningds</th>
                                        <th>Total Earnings</th>
                                        <th>SSS Prem</th>
                                        <th>Pag-Ibig</th>
                                        <th>Deductions</th>
                                        <th>Loan Payments</th>
                                        <th>PHIC</th>
                                        <th>Total Deductions</th>
                                        <th>Net Pay</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var payrollRecord in group)
                                    {
                                        <tr>
                                            <td>@payrollRecord.Employee.EmployeeCode</td>
                                            <td style="text-align: left;">@String.Format("{0}, {1}", payrollRecord.Employee.LastName, payrollRecord.Employee.FirstName)</td>
                                            <td>@String.Format("{0:n}", payrollRecord.DaysWorkedValue.GetValueOrDefault() + payrollRecord.HoursWorkedValue.GetValueOrDefault())</td>
                                            <td>@String.Format("{0:n}", payrollRecord.OvertimeValue.GetValueOrDefault())</td>
                                            <td>@String.Format("{0:n}", payrollRecord.HoursUndertimeValue.GetValueOrDefault() + payrollRecord.HoursLateValue.GetValueOrDefault())</td>
                                            <td>@String.Format("{0:n}", payrollRecord.COLADailyValue.GetValueOrDefault() + payrollRecord.COLAHourlyValue.GetValueOrDefault())</td>
                                            <td>@String.Format("{0:n}", payrollRecord.EarningsValue.GetValueOrDefault())</td>
                                            <td><strong>@String.Format("{0:n}", payrollRecord.TotalEarningsValue)</strong></td>
                                            <td>@String.Format("{0:n}", payrollRecord.SSSValueEmployee.GetValueOrDefault())</td>
                                            <td>@String.Format("{0:n}", payrollRecord.PagIbigValue.GetValueOrDefault())</td>
                                            <td>@String.Format("{0:n}", payrollRecord.DeductionsValue.GetValueOrDefault())</td>
                                            <td>@String.Format("{0:n}", payrollRecord.LoanPaymentValue.GetValueOrDefault())</td>
                                            <td>@String.Format("{0:n}", payrollRecord.PHICValueEmployee.GetValueOrDefault())</td>
                                            <td><strong>@String.Format("{0:n}", payrollRecord.TotalDeductionsValue)</strong></td>
                                            <td><strong>@String.Format("{0:n}", payrollRecord.NetPayValue)</strong></td>
                                        </tr>
                                    }
                                    <tr>
                                        <td>&nbsp;</td>
                                        <td>Total:</td>
                                        <td>@String.Format("{0:n}", group.Sum(p => p.DaysWorkedValue.GetValueOrDefault() + p.HoursWorkedValue.GetValueOrDefault()))</td>
                                        <td>@String.Format("{0:n}", group.Sum(p => p.OvertimeValue.GetValueOrDefault()))</td>
                                        <td>@String.Format("{0:n}", group.Sum(p => p.HoursUndertimeValue.GetValueOrDefault() + p.HoursLateValue.GetValueOrDefault()))</td>
                                        <td>@String.Format("{0:n}", group.Sum(p => p.COLADailyValue.GetValueOrDefault()))</td>
                                        <td>@String.Format("{0:n}", group.Sum(p => p.EarningsValue.GetValueOrDefault()))</td>
                                        <td><strong>@String.Format("{0:n}", group.Sum(p => p.TotalEarningsValue))</strong></td>
                                        <td>@String.Format("{0:n}", group.Sum(p => p.SSSValueEmployee.GetValueOrDefault()))</td>
                                        <td>@String.Format("{0:n}", group.Sum(p => p.PagIbigValue.GetValueOrDefault()))</td>
                                        <td>@String.Format("{0:n}", group.Sum(p => p.DeductionsValue.GetValueOrDefault()))</td>
                                        <td>@String.Format("{0:n}", group.Sum(p => p.LoanPaymentValue.GetValueOrDefault()))</td>
                                        <td>@String.Format("{0:n}", group.Sum(p => p.PHICValueEmployee.GetValueOrDefault()))</td>
                                        <td><strong>@String.Format("{0:n}", group.Sum(p => p.TotalDeductionsValue))</strong></td>
                                        <td><strong>@String.Format("{0:n}", group.Sum(p => p.NetPayValue))</strong></td>
                                    </tr>
                                </tbody>
                            </table>
                        }
                    }
                </div>
            </div>
        }
    </div>
</body>
</html>